:host{
    --testo-label: .75rem;
    --padding: .5rem;
    --colore-normale: #d1d5db;
    --colore-testo: #4b5563;
    --font-size: 1rem;
    --br: .5rem;

    display: flex;
    align-items: stretch;
    user-select: none;
    caret-color: transparent;

    &:has(.mockup){
        cursor: not-allowed;
    }

    &:has(.sopra){
        z-index: 5;
    }
}


.disabilitato{
    pointer-events: none;
    cursor: not-allowed;

    ion-icon{
        color: color-mix(in srgb, var(--colore-testo) 50%, transparent 50%);
    }

    .valore{
        --colore-testo: #4b5563;
        color: var(--colore-testo);
    }
}

.cont{
    padding: var(--padding) calc(var(--padding) * 1.5);
    border: 1px solid var(--colore-normale);
    border-radius: var(--br);
    background-color: #FFF;
    outline: 3px solid;
    outline-color: transparent;
    position: relative;
    cursor: pointer;
    transition: all .33s cubic-bezier(0.22, 0.61, 0.36, 1);

    .icona{
        transition: transform .33s linear;
    }

    &.mockup{
        pointer-events: none;
        caret-color: transparent;
    
        *{
            caret-color: transparent;
        }
    }
}

.flex-row{
    position: relative;
    align-items: center;
    flex-grow: 1;
    justify-content: space-between;
}

hr{
    width: 0;
    height: var(--font-size);
    margin-inline: var(--padding);
    border-left: 1px solid;
    border-color: var(--colore-normale);
}

label{
    content: attr(testo-label);
    position: absolute;
    top: 0;
    left: 0;
    padding-inline: 0;
    pointer-events: none;
    border-radius: var(--padding);
    background-color: #FFF;
    font-size: var(--font-size);
    transition: all .33s cubic-bezier(0.22, 0.61, 0.36, 1);
}

label.haValore{
    top: calc(var(--padding) * -2);
    left: calc(var(--padding) * -1);
    font-size: var(--testo-label);
    padding-inline: calc(var(--padding) / 2);
}

.valore, label{
    color: var(--colore-testo);
}

.abbassa{
    display: flex;
    justify-content: center;
    align-items: center;
    scale: 1.2;
}

.opzioni{
    position: absolute;
    display: grid;
    grid-template-rows: 0fr;
    transition: grid-template-rows 0.33s cubic-bezier(0.22, 0.61, 0.36, 1);
    top: calc(100% + .5rem);
    left: 0;
    right: 0;
    border-radius: .5rem;
    overflow: hidden;
    background-color: #FFF;
    filter: drop-shadow(0 0 1rem rgba(0, 0, 0, .1));

    &:not(.aperto){
        & > div{
            border-color: transparent;
        }
    }

    & > div{
        position: relative;
        border-radius: .5rem;
        border: 1px solid;
        border-color: #CCC;
        max-height: 10rem;
        overflow-y: scroll;
        direction: rtl;
        box-sizing: content-box;
        
        & > .wrapper-perizia{
            position: absolute;
        }
        *{
            box-sizing: border-box;
            direction: ltr;
        }
    }
}

::-webkit-scrollbar {
    width: .75rem;
}

::-webkit-scrollbar-thumb {
    border: 4px solid rgba(0, 0, 0, 0);
    background-clip: padding-box;
    border-radius: 100vh;
    background-color: var(--accento);
}

.cont-opzioni{

    .opzione{
        padding: .6rem;
        display: flex;
        justify-content: space-between;
        transition: background-color .33s cubic-bezier(0.22, 0.61, 0.36, 1);
        border-radius: .5rem;

        ion-icon{
            display: none;
        }

        &:hover{
            background-color: #EEE;
        }

        &.selezionata{
            color: var(--accento);

            ion-icon{
                display: block;
            }
        }
    }
}

.opzioni.aperto{
    grid-template-rows: 1fr;
}

.cont:has(.opzioni.aperto){
    outline-color: color-mix(in srgb, var(--accento) 50%, transparent 50%);

    .icona{
        transform: rotate(180deg);
    }
}

ion-icon{
    transition: color .33s cubic-bezier(0.22, 0.61, 0.36, 1);
}

:host.abilitato:not(:has(.disabilitato)){
    --colore-normale: #CCC;
    --br: .5rem;

    label{
        color: var(--colore-normale);
    }

    .cont{
        --colore-testo: #000;
        --colore-normale: #000;

        label{
            color: unset;
        }
    }

    .cont.errore{
        --colore-testo: #eb4e4e;
        --colore-normale: #eb4e4e;

        label{
            color: var(--colore-normale);
        }
    }

    .cont:has(input:focus){
        outline-color: color-mix(in srgb, 50% var(--accento), transparent 50%);
    }

    &:hover{
        border-color: var(--accento);

        ion-icon:not(.disabilitato){
            color: var(--accento);
        }
    
        hr:not(.disabilitato){
            border-color: var(--accento);        
        }
    }
}